{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "GCC BOOST",
            "type": "shell",
            "command": "g++.exe",
            "args": [
                "-Wall",
                "-g",
                "-IC:/boost_1_69_0",
                "${file}"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "GCC Builder",
            "type": "shell",
            "command": "g++.exe",
            "args": [
                "-Wall",
                "-g",
                "${file}"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Clang Builder",
            "type": "shell",
            "command": "C:/LLVM/build/bin/clang++.exe",
            "args": [
                "-Wall",
                "-g",
                "${file}"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Clang-Tidy Analizer",
            "type": "shell",
            "command": "C:/LLVM/build/bin/clang-tidy.exe",
            "args": [
                "-header-filter=.*",
                "-checks=modernize-*",
                "${file}",
                "--",
                "std=c++14"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "nvcc",
            "type": "shell",
            "command": "nvcc.exe",
            "args": [
                "-gencode=arch=compute_35,code=\\\"sm_35,compute_35\\\"", //This option provides a generalization of the --gpu-architecture=arch --gpu-code=code,... option combination for specifying nvcc behavior with respect to code generation.
                // "--use-local-env",
                // Specify the directory in which the compiler executable resides.
                "-ccbin", "C:/Program Files (x86)/Microsoft Visual Studio/2017/Professional/VC/Tools/MSVC/14.16.27023/bin/HostX86/x64", 
                "-g",               // Generate debug information for host code.
                "-x", "cu",         // Explicitly specify the language for the input files, rather than letting the compiler choose a default based on the file name suffix.
                "-G",               // Generate debug information for device code
                "-maxrregcount=0",  // Specify the maximum amount of registers that GPU functions can use 
                "--keep-dir",  "./CUDA/Debug/",
                "--machine", "64",  // Specify 32-bit vs. 64-bit architecture
                // "--compile",        // Compile each .c, .cc, .cpp, .cxx, and .cu input file into an object file.
                "-cudart", "static",// Specify the type of CUDA runtime library to be used: no CUDA runtime library, shared/dynamic CUDA runtime library, or static CUDA runtime library
                "-DWIN32", "-DWIN64", "-D_DEBUG", "-D_CONSOLE", "-D_MBCS", // Define macros to be used during preprocessing.
                "-Xcompiler", "/EHsc /W3 /nologo /Od /Fd./CUDA/Debug/vc141.pdb /FS /Zi /RTC1 /MDd ", // Specify options directly to the compiler/preprocessor.
                "-o", "./CUDA/Debug/${fileBasenameNoExtension}", // Specify name and location of the output file.
                "${file}",
                // "-clean"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
}